# Docker Compose description of the combined application.
#
# 'docker-compose up' will run this.

# This section describes the various containers (services).
services:

  rabbitmq:
    # There is a prebuilt RabbitMQ image; see
    # https://hub.docker.com/_/rabbitmq/ for details.
    # This variant is built on Alpine Linux (it's smaller) and includes
    # the management UI.
    image: 'mosquito/aiormq-rabbitmq'

    # These ports are exposed on the host; 'hostport:containerport'.
    # You could connect to this server from outside with the *host's*
    # DNS name or IP address and port 5672 (the left-hand side of the
    # colon).
    ports:
      # The standard AMQP protocol port
      - '5671:5671'
      - '5672:5672'
      # HTTP management UI
      - '15671:15671'
      - '15672:15672'


    # Run this container on a private network for this application.
    # This is necessary for magic Docker DNS to work: other containers
    # also running on this network will see a host name "rabbitmq"
    # (the name of this section) and the internal port 5672, even though
    # that's not explicitly published above.
    networks:
      - network

  websocket-tcp-relay:
    image: 'cloudamqp/websocket-tcp-relay:latest'
    ports:
      # ws socket port
      - '15670:15670'
    command: ["/usr/bin/websocket-tcp-relay", "--bind=0.0.0.0","--upstream=tcp://rabbitmq:5672"]
    networks:
      - network

networks:
  # Declare our private network.  We must declare one for the magic
  # Docker DNS to work, but otherwise its default settings are fine.
  network: {}
